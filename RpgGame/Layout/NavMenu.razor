@using RpgGame.Services
@using System.Timers
@using RpgGame.Functions

<header>
    <div>
        <div class="moon-phase">@Now.ComputeMoonPhase().ToEmoji()</div>
        <AuthorizeView>
            <Authorized>
                <div>Hello, @(CurrentPlayer.Info?.Name ?? "friend")!</div>
            </Authorized>
            <NotAuthorized>
                <div>Hello, stranger!</div>
                <a class="button" href="/log-in">Login</a>
                <a class="button" href="/sign-up">Sign up</a>
            </NotAuthorized>
        </AuthorizeView>
        <button class="hamburger" @onclick="() => DropdownIsOpen = true">
            <img alt="hamburger menu" src="images/hamburger-menu.svg" width="24" height="24"/>
        </button>
    </div>
</header>

<NavMenuDropdown @bind-IsOpen="DropdownIsOpen" />

@code {

    [Inject] public CurrentPlayer CurrentPlayer { get; set; } = null!;

    public bool DropdownIsOpen { get; set; }

    public DateTimeOffset Now { get; set; }
    private Timer? Timer { get; set; }

    override protected async Task OnInitializedAsync()
    {
        Now = DateTimeOffset.Now;

        Timer = new(TimeSpan.FromMinutes(1));

        Timer.Elapsed += async (sender, e) =>
        {
            Now = DateTimeOffset.Now;
            await InvokeAsync(StateHasChanged);
        };

        Timer.Enabled = true;
    }

}
